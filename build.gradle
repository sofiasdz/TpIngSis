plugins {
    id 'java'
    id "nebula.lint" version "16.23.0"
    id "com.diffplug.spotless" version "5.12.4"
    id 'com.monits.staticCodeAnalysis' version '3.1.1'
    id 'checkstyle'




}

group 'org.example'
version '2.2-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

}
allprojects {
    apply plugin: 'nebula.lint'
    gradleLint.rules = ['all-dependency'] // add as many rules here as you'd like
}

spotless {
    java {
        googleJavaFormat('1.8').aosp()
        licenseHeader '/* (C)$YEAR */'
    }

    staticCodeAnalysis {
        spotbugs = true
        checkstyle = true
        pmd = true
        cpd = true
        androidLint = true

        ignoreErrors = true

        spotbugsExclude = "$project.rootProject.projectDir/config/spotbugs/excludeFilter.xml"
        checkstyleRules = 'https://raw.githubusercontent.com/Monits/static-code-analysis-plugin/staging/defaults/checkstyle/checkstyle-cache.xml'
        pmdRules = [ 'https://raw.githubusercontent.com/Monits/static-code-analysis-plugin/staging/defaults/pmd/pmd.xml',
                     'https://raw.githubusercontent.com/Monits/static-code-analysis-plugin/staging/defaults/pmd/pmd-android.xml' ]

        androidLintConfig = 'https://raw.githubusercontent.com/Monits/static-code-analysis-plugin/staging/defaults/android/android-lint.xml'

        sourceSetConfig {
            test {
                checkstyleRules = 'config/checkstyle/test-checkstyle.xml'
                spotbugsExclude = 'config/spotbugs/test-spotbugs.xml'
                pmdRules = [ 'config/pmd/test-pmd.xml',
                             'https://raw.githubusercontent.com/Monits/static-code-analysis-plugin/staging/defaults/pmd/pmd-android.xml' ]
            }
        }
    }


}
checkstyle {
    toolVersion = '7.1'
    configFile = rootProject.file('checkstyles/checkstyles.xml')
}
